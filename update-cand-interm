<div class="modal-dialog" role="document" style="overflow-y: initial !important;">
    <div class="modal-content">
        <div class="modal-header">
            <h4 class="modal-title" id="exampleModalLabel">
              <b>{{formType | titlecase}} Job Application</b>
            </h4>
          </div>
            <div class="modal-body" style="max-height: 30rem; overflow-y: auto;">
                <form name="form" #f="ngForm" (ngSubmit)="updateApplication(f)" >
        
                <div class="form-group">
                    <label for="appliedForJdId"><b> Applied for JD</b><span class="asterick">*</span></label>
                    <input readOnly type="text" name="appliedForJdId" class="form-control" [(ngModel)]="model.appliedForJdId" 
                    placeholder="JD referral" #appliedForJdId="ngModel" id="appliedForJdId"
                    [ngClass]="{ 'is-invalid': f.submitted && appliedForJdId.invalid }">
                    <div *ngIf="f.submitted && appliedForJdId.invalid" class="invalid-feedback">
                    <div *ngIf="appliedForJdId.errors.required"><i class="mdi mdi-alert-outline"></i>Applied For JD ID field is required</div>
                    </div>
                </div>

                <div class="form-group">
                    <label for="appliedForPosition"><b> Applied for Position </b><span class="asterick">*</span></label>
                    <input readOnly type="text" name="appliedForPosition" class="form-control" [(ngModel)]="model.appliedForPosition" 
                    placeholder="JD referral" #appliedForPosition="ngModel" id="appliedForPosition"
                    [ngClass]="{ 'is-invalid': f.submitted && appliedForPosition.invalid }">
                    <div *ngIf="f.submitted && appliedForPosition.invalid" class="invalid-feedback">
                    <div *ngIf="appliedForPosition.errors.required"><i class="mdi mdi-alert-outline"></i>Applied For Position is required</div>
                    </div>
                </div>

                <div class="form-group">
                    <label for="Name"><b> Full Name </b><span class="asterick">*</span></label>
                    <input [readOnly]="formType == 'view'" type="text" name="name" class="form-control" 
                    [(ngModel)]="model.name"  placeholder="Name" #name="ngModel" id="name" 
                    [ngClass]="{ 'is-invalid': name.dirty && name.invalid}" required>
                    <div *ngIf="name.dirty && name.errors?.required" class="invalid-feedback">
                    <div *ngIf="name.errors.required"><i class="mdi mdi-alert-outline"></i>Name is required</div>
                    </div>
                </div>

                <div class="form-group">
                    <label for="education"><b>Highest Qualification </b> <span class="asterick">*</span></label>
                    <input [readOnly]="formType == 'view'" type="text" name="education" class="form-control" 
                    [(ngModel)]="model.education"  placeholder="eg: BTech" #education="ngModel" id="education" 
                    [ngClass]="{ 'is-invalid': education.dirty && education.invalid}" required>
                    <div *ngIf="education.dirty && education.errors?.required" class="invalid-feedback">
                    <div *ngIf="education.errors.required"><i class="mdi mdi-alert-outline"></i>Highest Qualification is required</div>
                    </div>
                </div>

                <div class="form-group">
                    <label for="email"><b>Email Address</b> <span class="asterick">*</span></label>
                    <input [readOnly]="formType == 'view'" type="email" name="email" placeholder="eg: example@gmail.com" 
                    class="form-control" id="email" [(ngModel)]="model.email" #email="ngModel" 
                    pattern="^([a-zA-Z0-9_\-\.]+)@([a-zA-Z0-9_\-\.]+)\.([a-zA-Z]{2,5})$" 
                    [ngClass]="{ 'is-invalid': email.dirty && email.invalid }" required>
                    <div *ngIf="email.dirty && email.errors?.required" class="invalid-feedback">
                    <div><i class="mdi mdi-alert-outline"></i>Email is required</div>
                    </div>
                    <div *ngIf="email.dirty && email.errors?.pattern" class="invalid-feedback">
                    <div><i class="mdi mdi-alert-outline"></i>Enter valid email</div>
                    </div>
                </div>

                <div class="form-group">
                    <label for="phone"><b> Phone </b><span class="asterick">*</span></label>
                    <input [readOnly]="formType == 'view'" type="text" name="phone" class="form-control" 
                    [(ngModel)]="model.phone"  placeholder="" #phone="ngModel" id="phone" 
                    [ngClass]="{ 'is-invalid': phone.dirty && phone.invalid}" required>
                    <div *ngIf="phone.dirty && phone.errors?.required" class="invalid-feedback">
                    <div *ngIf="phone.errors.required"><i class="mdi mdi-alert-outline"></i>Phone is required</div>
                    </div>
                </div>

                <div class="form-group">
                    <label ><b> Experience </b></label>            
                    <div class="row">
                    <div class="col-md-6">
                        <select type="text" name="experienceInYears" placeholder="In years" 
                        class="form-control" id="experienceInYears" [(ngModel)]="model.experienceInYears" #experienceInYears="ngModel" 
                        [ngClass]="{ 'is-invalid': experienceInYears.dirty && experienceInYears.invalid}" required>
                        <option class="select-css" value="none" selected disabled  >YY</option>
                        <option  [disabled] = "formType == 'view'" class="select-css"  *ngFor="let number of numbersInYears" value={{number}} >{{number}}</option>
                        <option [disabled] = "formType == 'view'" class="select-css"  value="30+">30+</option>
                        </select>

                        <div *ngIf="experienceInYears.dirty" class="invalid-feedback">
                        <div><i class="mdi mdi-alert-outline"></i>Experience in years is required</div>
                        </div>
                    </div>

                    <div class="col-md-6">
                        <select type="text" name="experienceInMonths" placeholder="In months" 
                        class="form-control" id="experienceInMonths" [(ngModel)]="model.experienceInMonths" #experienceInMonths="ngModel" 
                        [ngClass]="{ 'is-invalid': experienceInMonths.dirty && experienceInMonths.invalid}" required>
                        <option  class="select-css" value="none" selected disabled >MM</option>
                        <option [disabled] = "formType == 'view'" class="select-css" *ngFor="let number of numbersInMonths" value={{number}} >{{number}}</option>
                        </select>
                        <div *ngIf="experienceInMonths.dirty" class="invalid-feedback">  
                        <div><i class="mdi mdi-alert-outline">s</i>Experience in months is required</div>
                        </div>
                    </div>
                    </div>
                </div>    

                <div class="form-group">
                    <label for="nationality"><b> Nationality</b><span class="asterick">*</span></label>
                    <input  readOnly type="text" name="nationality" class="form-control" 
                    [(ngModel)]="model.nationality"  placeholder="eg: Indian" #nationality="ngModel" id="nationality" 
                    [ngClass]="{ 'is-invalid': nationality.dirty && nationality.invalid}" required>
                    <div *ngIf="nationality.dirty && nationality.errors?.required" class="invalid-feedback">
                    <div *ngIf="nationality.errors.required"><i class="mdi mdi-alert-outline"></i>Nationality is required</div>
                    </div>
                </div>         

                <div class="form-group">
                    <label ><b>Identification ID</b><span class="asterick">*</span></label>
                    <div class="row">
                    <div class="col-md-6">
                        <select type="text" name="idProofTypeId"                         
                        class="form-control" id="idProofTypeId" [(ngModel)]="model.idProofTypeId" #idProofTypeId="ngModel" 
                        [ngClass]="{ 'is-invalid': (idProofTypeId.dirty && idProofTypeId.invalid) || (idProofTypeId.dirty && model.nationality=='Indian' && model.idProofTypeId != aadharId) }" required>
                        <option  class="select-css" value="none" selected disabled >Select an option</option>
                        <option disabled class="select-css" *ngFor="let idProof of idProofTypes" value={{idProof.id}} >{{idProof.name}}</option>
                        
                        </select>

                        <div *ngIf="idProofTypeId.dirty && idProofTypeId.invalid" class="invalid-feedback">  
                        <div><i class="mdi mdi-alert-outline"></i>ID type is required</div>
                        </div>
                        <div *ngIf="(idProofTypeId.dirty && model.nationality=='Indian' && model.idProofTypeId != aadharId)" class="invalid-feedback">  
                        <div><i class="mdi mdi-alert-outline"></i>If you're Indian select Adhar Card</div>
                        </div>

                    </div>

                    <div *ngIf="model.idProofTypeId==aadharId" class="col-md-6">
                        <input  [readOnly]="formType == 'view'" type="text" name="identificationNo"  
                        class="form-control" id="identificationNo"  [(ngModel)]="model.identificationNo" #identificationNo="ngModel" pattern="^\d{4}\s\d{4}\s\d{4}$"
                        [ngClass]="{ 'is-invalid': (identificationNo.dirty && identificationNo.invalid)}" required>
        
                        <div *ngIf="identificationNo.dirty && identificationNo.errors?.required" class="invalid-feedback">
                          <div><i class="mdi mdi-alert-outline"></i>Identification No is required</div>
                        </div>
                        <div *ngIf="model.idProofTypeId==aadharId && identificationNo.dirty && identificationNo.errors?.pattern" class="invalid-feedback">
                          <div><i class="mdi mdi-alert-outline"></i>Enter valid Aadhar Card Number</div>
                        </div>
                      </div>
        
                      <div *ngIf="model.idProofTypeId==panId" class="col-md-6">
                        <input  [readOnly]="formType == 'view'" type="text" name="identificationNo"  
                        class="form-control" id="pan" pattern="[A-Z]{5}[0-9]{4}[A-Z]{1}"  [(ngModel)]="model.identificationNo" #pan="ngModel"
                        [ngClass]="{ 'is-invalid': (pan.dirty && pan.invalid)}" required>
        
                        <div *ngIf="pan.dirty && pan.errors?.required" class="invalid-feedback">
                          <div><i class="mdi mdi-alert-outline"></i>Identification No is required</div>
                        </div>
                        <div *ngIf="pan.dirty && pan.errors?.pattern" class="invalid-feedback">
                          <div><i class="mdi mdi-alert-outline"></i>Enter valid Pan Card Number</div>
                        </div>
                      </div>
        
                </div>
                </div>

                <div class="form-group">
                    <label><b>Resume</b><span class="asterick">*</span></label>
                    <div  class="input-group col-xs-12"> 
                    <a (click)="openResume()" ><i class="far fa-file-pdf"></i>  {{model.cvName}}</a>
                    </div>
                </div>   
                
                <div class="d-flex flex-row-reverse">
                <button *ngIf="formType=='update'" type="submit" [disabled]="f.pristine || f.invalid || (idProofTypeId.dirty && model.nationality=='Indian' && model.idProofTypeId != aadharId)" class="btn btn-gradient-danger" 
                ><b>Update</b></button>
                </div>     

                <div class="d-flex flex-row-reverse">
                <button class="btn btn-gradient-secondary" (click)="modalClose()">Cancel</button>
                </div>
        </form>

            </div>
    
    </div>
</div> 


   
