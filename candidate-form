<div class="col-12 stretch-card">
    <div class="card">
      <div class="card-body">
        <h4 class= "top"><b>Job Application</b></h4>
        <form name="form" #f="ngForm" (ngSubmit)="createApplication(f)" >
  
          <div class="form-group">
            <label for="appliedForJdId">Applied for JD</label>
            <input [readOnly]="type == 'progressTracker' || 'candidate'" type="text" name="appliedForJdId" class="form-control" [(ngModel)]="model.appliedForJdId" 
             placeholder="JD referral" #appliedForJdId="ngModel" id="appliedForJdId"
             [ngClass]="{ 'is-invalid': f.submitted && appliedForJdId.invalid }">
            <div *ngIf="f.submitted && appliedForJdId.invalid" class="invalid-feedback">
              <div *ngIf="appliedForJdId.errors.required"><i class="mdi mdi-alert-outline"></i>Applied For JD ID field is required</div>
            </div>
          </div>

          <div class="form-group">
            <label for="appliedForPosition">Applied for Position</label>
            <input [readOnly]="type == 'progressTracker' || 'candidate'" type="text" name="appliedForPosition" class="form-control" [(ngModel)]="model.appliedForPosition" 
             placeholder="JD referral" #appliedForPosition="ngModel" id="appliedForPosition"
             [ngClass]="{ 'is-invalid': f.submitted && appliedForPosition.invalid }">
            <div *ngIf="f.submitted && appliedForPosition.invalid" class="invalid-feedback">
              <div *ngIf="appliedForPosition.errors.required"><i class="mdi mdi-alert-outline"></i>Applied For Position is required</div>
            </div>
          </div>

          <div class="form-group">
            <label for="Name"><span class="asterick">*</span>Name</label>
            <input [readOnly]="type == 'progressTracker'" type="text" name="name" class="form-control" 
             [(ngModel)]="model.name"  placeholder="Name" #name="ngModel" id="name" 
             [ngClass]="{ 'is-invalid': name.touched && name.invalid}" required>
            <div *ngIf="name.touched && name.errors?.required" class="invalid-feedback">
              <div *ngIf="name.errors.required"><i class="mdi mdi-alert-outline"></i>Name is required</div>
            </div>
          </div>

          <div class="form-group">
            <label for="education"><span class="asterick">*</span>Highest Qualification</label>
            <input [readOnly]="type == 'progressTracker'" type="text" name="education" class="form-control" 
             [(ngModel)]="model.education"  placeholder="eg: BTech" #education="ngModel" id="education" 
             [ngClass]="{ 'is-invalid': education.touched && education.invalid}" required>
            <div *ngIf="education.touched && education.errors?.required" class="invalid-feedback">
              <div *ngIf="education.errors.required"><i class="mdi mdi-alert-outline"></i>Highest Qualification is required</div>
            </div>
          </div>

          <div class="form-group">
            <label for="email"><span class="asterick">*</span>Email Address</label>
            <input [readOnly]="type == 'progressTracker'" type="email" name="email" placeholder="eg: example@gmail.com" 
             class="form-control" id="email" [(ngModel)]="model.email" #email="ngModel" 
             pattern="^([a-zA-Z0-9_\-\.]+)@([a-zA-Z0-9_\-\.]+)\.([a-zA-Z]{2,5})$" 
             [ngClass]="{ 'is-invalid': email.touched && email.invalid }" required>
            <div *ngIf="email.touched && email.errors?.required" class="invalid-feedback">
              <div><i class="mdi mdi-alert-outline"></i>Email is required</div>
            </div>
            <div *ngIf="email.dirty && email.errors?.pattern" class="invalid-feedback">
              <div><i class="mdi mdi-alert-outline"></i>Enter valid email</div>
            </div>
          </div>

          <div class="form-group">
            <label for="phone"><span class="asterick">*</span>Phone</label>
            <input [readOnly]="type == 'progressTracker'" type="text" name="phone" class="form-control" 
             [(ngModel)]="model.phone"  placeholder="" #phone="ngModel" id="phone" 
             [ngClass]="{ 'is-invalid': phone.touched && phone.invalid}" required>
            <div *ngIf="phone.touched && phone.errors?.required" class="invalid-feedback">
              <div *ngIf="phone.errors.required"><i class="mdi mdi-alert-outline"></i>Phone is required</div>
            </div>
          </div>

          <div class="form-group">
            <label ><span class="asterick">*</span>Experience</label>            
            <div class="row">
              <div class="col-md-3">
                <select type="text" name="experienceInYears"
                class="form-control" id="experienceInYears" [(ngModel)]="model.experienceInYears" #experienceInYears="ngModel" 
                [ngClass]="{ 'is-invalid': experienceInYears.touched && experienceInYears.invalid}" required>
                  <option class="select-css" value="0" selected disabled  >YYYY</option>
                  <option class="select-css" [disabled]="type == 'progressTracker'" *ngFor="let number of numbersInYears" value={{number}} >{{number}}</option>
                  <option class="select-css" [disabled]="type == 'progressTracker'" value="30+">30+</option>
                </select>

                <div *ngIf="experienceInYears.touched" class="invalid-feedback">
                  <div><i class="mdi mdi-alert-outline"></i>Experience in years is required</div>
                </div>
              </div>

              <div class="col-md-3">
                <select type="text" name="experienceInMonths"
                class="form-control" id="experienceInMonths" [(ngModel)]="model.experienceInMonths" #experienceInMonths="ngModel" 
                [ngClass]="{ 'is-invalid': experienceInMonths.touched && experienceInMonths.invalid}" required>
                  <option class="select-css" value="0" selected disabled >MM</option>
                  <option class="select-css" [disabled]="type == 'progressTracker'" *ngFor="let number of numbersInMonths" value={{number}} >{{number}}</option>
                </select>
                <div *ngIf="experienceInMonths.touched" class="invalid-feedback">  
                  <div><i class="mdi mdi-alert-outline"></i>Experience in months is required</div>
                </div>
              </div>
            </div>
          </div>    

          <div class="form-group">
            <label for="nationality"><span class="asterick">*</span>Nationality</label>
            <input [readOnly]="type == 'progressTracker'" type="text" name="nationality" class="form-control" 
             [(ngModel)]="model.nationality"  placeholder="eg: Indian" #nationality="ngModel" id="nationality" 
             [ngClass]="{ 'is-invalid': nationality.touched && nationality.invalid}" required>
            <div *ngIf="nationality.touched && nationality.errors?.required" class="invalid-feedback">
              <div *ngIf="nationality.errors.required"><i class="mdi mdi-alert-outline"></i>Nationality is required</div>
            </div>
          </div>         

          <div class="form-group">
            <label ><span class="asterick">*</span>Identification ID</label>
            <div class="row">
              <div class="col-md-3">
                <select type="text" name="idProofTypeId"                         
                class="form-control" id="idProofTypeId" [(ngModel)]="model.idProofTypeId" #idProofTypeId="ngModel" 
                [ngClass]="{ 'is-invalid': (idProofTypeId.touched && idProofTypeId.invalid) || (idProofTypeId.dirty && model.nationality=='Indian' && model.idProofTypeId != aadharId) }" required>
                  <option class="select-css" value="none" selected disabled >Select an option</option>
                  <option class="select-css" [disabled]="type == 'progressTracker'" *ngFor="let idProof of idProofTypes" value={{idProof.id}} >{{idProof.name}}</option>
                 
                </select>
                <div *ngIf="idProofTypeId.touched && idProofTypeId.invalid" class="invalid-feedback">  
                  <div><i class="mdi mdi-alert-outline"></i>ID type is required</div>
                </div>
                <div  *ngIf="(idProofTypeId.dirty && model.nationality=='Indian' && model.idProofTypeId != aadharId)" class="invalid-feedback">  
                  <div><i class="mdi mdi-alert-outline"></i>If you're Indian select Aadhar Card</div>
                </div>

              </div>
              <div *ngIf="model.idProofTypeId==aadharId" class="col-md-3">
                <input  [readOnly]="type == 'progressTracker'"type="text" name="identificationNo"  
                class="form-control" id="identificationNo"  [(ngModel)]="model.identificationNo" #identificationNo="ngModel" pattern="^\d{4}\s\d{4}\s\d{4}$"
                [ngClass]="{ 'is-invalid': (identificationNo.touched && identificationNo.invalid)}" required>

                <div *ngIf="identificationNo.touched && identificationNo.errors?.required" class="invalid-feedback">
                  <div><i class="mdi mdi-alert-outline"></i>Identification No is required</div>
                </div>
                <div *ngIf="model.idProofTypeId==aadharId && identificationNo.dirty && identificationNo.errors?.pattern" class="invalid-feedback">
                  <div><i class="mdi mdi-alert-outline"></i>Enter valid Aadhar Card Number</div>
                </div>
              </div>

              <div *ngIf="model.idProofTypeId==panId" class="col-md-3">
                <input  [readOnly]="type == 'progressTracker'" type="text" name="identificationNo"  
                class="form-control" id="pan" pattern="[A-Z]{5}[0-9]{4}[A-Z]{1}"  [(ngModel)]="model.identificationNo" #pan="ngModel"
                [ngClass]="{ 'is-invalid': (pan.touched && pan.invalid)}" required>

                <div *ngIf="pan.touched && pan.errors?.required" class="invalid-feedback">
                  <div><i class="mdi mdi-alert-outline"></i>Identification No is required</div>
                </div>
                <div *ngIf="model.idProofTypeId == panId && pan.dirty && pan.errors?.pattern" class="invalid-feedback">
                  <div><i class="mdi mdi-alert-outline"></i>Enter valid Pan Card Number</div>
                </div>
              </div>
           </div>
          </div>

          <div class="form-group">
            <label><span class="asterick">*</span>Resume <span>(excepts pdf)</span></label>
            <div *ngIf="type !== 'progressTracker'" class="input-group  col-xs-12">           
              <input type="file" accept=".pdf" name="file" id="file" class="form-control"
               ngModel #file="ngModel" 
               (change) = "uploadResume($event)"
               [ngClass]="{ 'is-invalid': file.touched && file.invalid}" required>
              <div *ngIf="file.touched  && file.errors?.required" class="invalid-feedback">
                <div><i class="mdi mdi-alert-outline"></i>Resume is required</div>
              </div>
            </div>

            <div *ngIf="type == 'progressTracker'" class="input-group col-xs-12"> 
              <a (click)="openResume()" ><i class="far fa-file-pdf"></i>  Resume </a>
            </div>
          </div>   

          <div class="d-flex flex-row-reverse" *ngIf="type !== 'progressTracker'" >
            <button type="submit" [disabled]="f.invalid || (idProofTypeId.dirty && model.nationality=='Indian' && model.idProofTypeId != aadharId)" class="btn btn-gradient-danger mr-2" 
            ><b>Submit</b></button>
            <button class="btn btn-light" ><b>Cancel</b></button>
          </div>
          
        </form>
    </div>
  </div>
  <ngx-spinner bdColor="rgba(51, 51, 51, 0.8)" size="medium" color="#934d4d" type="ball-spin-clockwise">
    <p style="color: white;">Please Wait.</p>
  </ngx-spinner>
</div>
